INFO -- Device: cuda
INFO -- [92mTwo dimentional problem[0m
INFO -- 
INFO -- ================================================================================
INFO -- Learning parameters
INFO -- Length:                                           [92m1.0[0m
INFO -- Total time:                                       [92m1.0[0m
INFO -- Number of points in x:                            [92m10[0m
INFO -- Number of points in t:                            [92m10[0m
INFO -- Number of points in initial condition:            [92m300[0m
INFO -- Weight for interior loss:                         [92m1.0[0m
INFO -- Weight for initial condition loss:                [92m0.0[0m
INFO -- Weight for boundary loss:                         [92m1.0[0m
INFO -- Layers:                                           [92m4[0m
INFO -- Neurons per layer:                                [92m20[0m
INFO -- Epochs:                                           [92m100[0m
INFO -- Learning rate:                                    [92m0.00125[0m
INFO -- ================================================================================
INFO -- 
INFO -- Creating [92m2D[0m BSpline
INFO -- Creating PINN with [92m4[0m layers and [92m20[0m neurons per layer
INFO -- Training PINN for [93m100[0m epochs using [93mloss_fn_basic[0m loss function
INFO -- Training interrupted at epoch [91m1[0m
ERROR -- Exception occurred: Mismatch in shape: grad_output[0] has a shape of torch.Size([10000, 1]) and output[0] has a shape of torch.Size([100, 1]).
Traceback (most recent call last):
  File "C:\Users\macie\Documents\Studia\Magisterka\PINN_IGA_Masters\NN_tools.py", line 45, in train_model
    loss: torch.Tensor = loss_fn(nn_approximator)
  File "C:\Users\macie\Documents\Studia\Magisterka\PINN_IGA_Masters\loss_functions.py", line 502, in compute_loss
    weight_f * interior_loss_function(model, x, t, dims=dims, test_function=test_function)
  File "C:\Users\macie\Documents\Studia\Magisterka\PINN_IGA_Masters\loss_functions.py", line 94, in interior_loss_basic
    dfdxdx_model = dfdx(model, x, t, order=2).to(device) if isinstance(model, PINN) else model.calculate_BSpline_2D_deriv_dxdx(x, t, mode=mode).to(device)
  File "C:\Users\macie\Documents\Studia\Magisterka\PINN_IGA_Masters\differential_tools.py", line 71, in dfdx
    value = df(f_value, x, order=order)
  File "C:\Users\macie\Documents\Studia\Magisterka\PINN_IGA_Masters\differential_tools.py", line 41, in df
    df_value = torch.autograd.grad(
  File "C:\Users\macie\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\autograd\__init__.py", line 285, in grad
    grad_outputs_ = _make_grads(t_outputs, grad_outputs_, is_grads_batched=is_grads_batched)
  File "C:\Users\macie\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\autograd\__init__.py", line 68, in _make_grads
    raise RuntimeError("Mismatch in shape: grad_output["
RuntimeError: Mismatch in shape: grad_output[0] has a shape of torch.Size([10000, 1]) and output[0] has a shape of torch.Size([100, 1]).
INFO -- Training took [92m0.66[0m seconds
INFO -- Creating plots and saving to files. Dimensions: 2
